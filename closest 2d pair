// Implementing Closest 2D pairs in O(n^2) time

#include <stdio.h>
#include <limits.h>
#include <math.h>

void closest(int a[][2], int n)
{
    double min = INT_MAX;
    int c, d, e, f;

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (i != j)
            {
                int x1 = a[i][0];
                int x2 = a[j][0];
                int y1 = a[i][1];
                int y2 = a[j][1];
                double dist = sqrt(((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2)));
                if (dist < min)
                {
                    min = dist;
                    c = x1;
                    d = y1;
                    e = x2;
                    f = y2;
                }
            }
        }
    }

    printf("The shortest distance is %lf.\n", min);
    printf("The closest pair of points are: (%d,%d) and (%d,%d).", c, d, e, f);
}

int main()
{
    int n;
    scanf("%d", &n);
    int a[n][2];
    for (int i = 0; i < n; i++)
        scanf("%d %d", &a[i][0], &a[i][1]);
    closest(a, n);

    return 0;
}
